apiVersion: charts.starburstdata.com/v1alpha1
kind: StarburstEnterprise
metadata:
  creationTimestamp: "2022-06-01T15:44:14Z"
  finalizers:
  - helm.sdk.operatorframework.io/uninstall-release
  generation: 1
  name: starburstenterprise-sample
  namespace: starburst-sb12
  resourceVersion: "104001"
  uid: 061c0eca-4b83-4d28-b6e3-1a6f8229fbd9
spec:
  additionalVolumes: []
  cache:
    diskUsagePercentage: 80
    enabled: false
    ttl: 7d
    volume:
      emptyDir: {}
  catalogs:
    tpch: |-
      connector.name=tpch
      tpch.splits-per-node=4
  commonLabels: {}
  coordinator:
    additionalProperties: ""
    affinity: {}
    deploymentAnnotations: {}
    envFrom: []
    etcFiles:
      jvm.config: |
        -server
        -XX:-UseBiasedLocking
        -XX:+UseG1GC
        -XX:G1HeapRegionSize=32M
        -XX:+ExplicitGCInvokesConcurrent
        -XX:+ExitOnOutOfMemoryError
        -XX:+HeapDumpOnOutOfMemoryError
        -XX:-OmitStackTraceInFastThrow
        -XX:ReservedCodeCacheSize=512M
        -XX:PerMethodRecompilationCutoff=10000
        -XX:PerBytecodeRecompilationCutoff=10000
        -Djdk.nio.maxCachedBufferSize=2000000
        -Djdk.attach.allowAttachSelf=true
      other: {}
      properties:
        config.properties: |
          coordinator=true
          node-scheduler.include-coordinator=false
          http-server.http.port=8080
          discovery.uri=http://localhost:8080
          discovery-server.enabled=true
        log.properties: |
          # Enable verbose logging from Starburst Enterprise
          #io.trino=DEBUG
          #com.starburstdata.presto=DEBUG
        node.properties: |
          node.environment={{ include "starburst.environment" . }}
          node.data-dir=/data/starburst
          plugin.dir=/usr/lib/starburst/plugin
          node.server-log-file=/var/log/starburst/server.log
          node.launcher-log-file=/var/log/starburst/launcher.log
    heapHeadroomPercentage: 30
    heapSizePercentage: 90
    initContainers: []
    nodeMemoryHeadroom: 2Gi
    nodeSelector: {}
    podAnnotations: {}
    priorityClassName: null
    resources:
      cpu: 16
      memory: 60Gi
    sidecars: []
    tolerations: []
  environment: null
  expose:
    clusterIp:
      name: starburst
      ports:
        http:
          port: 8080
    ingress:
      annotations: {}
      host: null
      ingressClassName: null
      ingressName: coordinator-ingress
      path: /
      pathType: ImplementationSpecific
      serviceName: starburst
      servicePort: 8080
      tls:
        enabled: true
        secretName: null
    loadBalancer:
      IP: ""
      annotations: {}
      name: starburst
      ports:
        http:
          port: 8080
      sourceRanges: []
    nodePort:
      extraLabels: {}
      name: starburst
      ports:
        http:
          nodePort: 30080
          port: 8080
    type: clusterIp
  externalSecrets:
    enabled: false
    goDaddy:
      backendType: secretsManager
    secretPrefix: external0
    type: goDaddy
  extraArguments: []
  extraSecret:
    file: null
    name: null
  image:
    pullPolicy: IfNotPresent
    repository: registry.connect.redhat.com/starburst/starburst-enterprise
    tag: 370-e.1-ubi
  imagePullSecrets: null
  initFile: ""
  initImage:
    pullPolicy: IfNotPresent
    repository: registry.connect.redhat.com/starburst/starburst-enterprise-init
    tag: 370.1.1-ubi
  internal:
    ports:
      http:
        port: 8080
      https:
        port: 8443
  internalTls: false
  livenessProbe: null
  prometheus:
    agent:
      config: /etc/starburst/telemetry/prometheus.yaml
      port: 8081
      version: 0.16.1
    enabled: true
    rules:
    - attrNameSnakeCase: true
      name: $1
      pattern: trino.execution<name=QueryManager><>(running_queries|queued_queries)
      type: GAUGE
    - name: failed_queries
      pattern: trino.execution<name=QueryManager><>FailedQueries\.TotalCount
      type: COUNTER
    - name: jvm_heap_memory_commited
      pattern: java.lang<type=Memory><HeapMemoryUsage>committed
      type: GAUGE
    - name: jvm_heap_memory_used
      pattern: java.lang<type=Memory><HeapMemoryUsage>used
    - name: thread_count
      pattern: java.lang<type=Threading><>(ThreadCount)
    - name: trino_active_nodes
      pattern: trino.failuredetector<name=HeartbeatFailureDetector><>(ActiveCount)
      type: COUNTER
    - name: trino_free_memory
      pattern: trino.memory<type=ClusterMemoryPool, name=general><>(FreeDistributedBytes)
      type: COUNTER
    - name: queries_killed_oom
      pattern: trino.memory<name=ClusterMemoryManager><>(QueriesKilledDueToOutOfMemory)
    - name: trino_active_queries
      pattern: trino.execution<name=QueryManager><>RunningQueries.FiveMinute\.Count
      type: COUNTER
    - name: trino_queries_started
      pattern: trino.execution<name=QueryManager><>StartedQueries.FiveMinute\.Count
      type: COUNTER
    - name: trino_queries_failed_external
      pattern: trino.execution<name=QueryManager><>ExternalFailures.FiveMinute\.Count
      type: COUNTER
    - name: trino_queries_failed_internal
      pattern: trino.execution<name=QueryManager><>InternalFailures.FiveMinute\.Count
      type: COUNTER
    - name: trino_queries_failed_all
      pattern: trino.execution<name=QueryManager><>FailedQueries.FiveMinute\.Count
      type: COUNTER
    - name: trino_failed_queries_user
      pattern: trino.execution<name=QueryManager><>UserErrorFailures.FiveMinute\.Count
      type: COUNTER
    - name: trino_execution_latency
      pattern: trino.execution<name=QueryManager><>ExecutionTime.FiveMinutes\.Count
      type: COUNTER
    - name: trino_input_data_rate
      pattern: trino.execution<name=QueryManager><>WallInputBytesRate.FiveMinute\.Count
      type: COUNTER
    - name: input_data_bytes
      pattern: trino.execution<name=TaskManager><>InputDataSize
    - name: input_rows
      pattern: trino.execution<name=TaskManager><>InputPositions.FiveMinute\.Count
    - name: cluster_memory_bytes
      pattern: trino.memory<name=ClusterMemoryManager><>(ClusterMemoryBytes)
    - name: tasks_killed_oom
      pattern: trino.memory<name=ClusterMemoryManager><>(TasksKilledDueToOutOfMemory)
  query:
    maxConcurrentQueries: 3
  readinessProbe: null
  registryCredentials:
    enabled: false
    password: null
    registry: registry.connect.redhat.com
    username: null
  securityContext: {}
  sharedSecret: null
  spilling:
    enabled: false
    volume:
      emptyDir: {}
  startupProbe: null
  usageMetrics:
    enabled: false
    usageClient:
      initialDelay: 1m
      interval: 1m
  userDatabase:
    enabled: false
    users:
    - password: 46991b33f7a75ff79213c0dc0e610610
      username: admin
  worker:
    additionalProperties: ""
    affinity: {}
    autoscaling:
      enabled: false
      maxReplicas: 100
      minReplicas: 1
      targetCPUUtilizationPercentage: 80
    deploymentAnnotations: {}
    deploymentTerminationGracePeriodSeconds: 300
    envFrom: []
    etcFiles:
      jvm.config: |
        -server
        -XX:-UseBiasedLocking
        -XX:+UseG1GC
        -XX:G1HeapRegionSize=32M
        -XX:+ExplicitGCInvokesConcurrent
        -XX:+ExitOnOutOfMemoryError
        -XX:+HeapDumpOnOutOfMemoryError
        -XX:-OmitStackTraceInFastThrow
        -XX:ReservedCodeCacheSize=512M
        -XX:PerMethodRecompilationCutoff=10000
        -XX:PerBytecodeRecompilationCutoff=10000
        -Djdk.nio.maxCachedBufferSize=2000000
        -Djdk.attach.allowAttachSelf=true
      other: {}
      properties:
        config.properties: |
          coordinator=false
          http-server.http.port=8080
          discovery.uri=http://coordinator:8080
        log.properties: |
          # Enable verbose logging from Starburst Enterprise
          #io.trino=DEBUG
          #com.starburstdata.presto=DEBUG
        node.properties: |
          node.environment={{ include "starburst.environment" . }}
          node.data-dir=/data/starburst
          plugin.dir=/usr/lib/starburst/plugin
          node.server-log-file=/var/log/starburst/server.log
          node.launcher-log-file=/var/log/starburst/launcher.log
    heapHeadroomPercentage: 30
    heapSizePercentage: 90
    initContainers: []
    nodeMemoryHeadroom: 2Gi
    nodeSelector: {}
    podAnnotations: {}
    priorityClassName: null
    replicas: 2
    resources:
      cpu: 16
      memory: 100Gi
    sidecars: []
    starburstWorkerShutdownGracePeriodSeconds: 120
    tolerations: []
status:
  conditions:
  - lastTransitionTime: "2022-06-01T15:44:14Z"
    status: "True"
    type: Initialized
  - lastTransitionTime: "2022-06-01T15:44:21Z"
    reason: InstallSuccessful
    status: "True"
    type: Deployed
  deployedRelease:
    manifest: "---\n# Source: starburst-enterprise/templates/configuration/secret.yaml\n#
      ------------------------------------------------------------------------------\n#
      Coordinator Configuration\n# ------------------------------------------------------------------------------\napiVersion:
      v1\nkind: Secret\nmetadata:\n  name: values-yaml-secret\n  labels:\n    name:
      values-yaml-secret\ndata:\n  values.yaml: YWRkaXRpb25hbFZvbHVtZXM6IFtdCmNhY2hlOgogIGRpc2tVc2FnZVBlcmNlbnRhZ2U6IDgwCiAgZW5hYmxlZDogZmFsc2UKICB0dGw6IDdkCiAgdm9sdW1lOgogICAgZW1wdHlEaXI6IHt9CmNhdGFsb2dzOgogIHRwY2g6IHwtCiAgICBjb25uZWN0b3IubmFtZT10cGNoCiAgICB0cGNoLnNwbGl0cy1wZXItbm9kZT00CmNvbW1vbkxhYmVsczoge30KY29vcmRpbmF0b3I6CiAgYWRkaXRpb25hbFByb3BlcnRpZXM6ICIiCiAgYWZmaW5pdHk6IHt9CiAgZGVwbG95bWVudEFubm90YXRpb25zOiB7fQogIGVudkZyb206IFtdCiAgZXRjRmlsZXM6CiAgICBqdm0uY29uZmlnOiB8CiAgICAgIC1zZXJ2ZXIKICAgICAgLVhYOi1Vc2VCaWFzZWRMb2NraW5nCiAgICAgIC1YWDorVXNlRzFHQwogICAgICAtWFg6RzFIZWFwUmVnaW9uU2l6ZT0zMk0KICAgICAgLVhYOitFeHBsaWNpdEdDSW52b2tlc0NvbmN1cnJlbnQKICAgICAgLVhYOitFeGl0T25PdXRPZk1lbW9yeUVycm9yCiAgICAgIC1YWDorSGVhcER1bXBPbk91dE9mTWVtb3J5RXJyb3IKICAgICAgLVhYOi1PbWl0U3RhY2tUcmFjZUluRmFzdFRocm93CiAgICAgIC1YWDpSZXNlcnZlZENvZGVDYWNoZVNpemU9NTEyTQogICAgICAtWFg6UGVyTWV0aG9kUmVjb21waWxhdGlvbkN1dG9mZj0xMDAwMAogICAgICAtWFg6UGVyQnl0ZWNvZGVSZWNvbXBpbGF0aW9uQ3V0b2ZmPTEwMDAwCiAgICAgIC1EamRrLm5pby5tYXhDYWNoZWRCdWZmZXJTaXplPTIwMDAwMDAKICAgICAgLURqZGsuYXR0YWNoLmFsbG93QXR0YWNoU2VsZj10cnVlCiAgICBvdGhlcjoge30KICAgIHByb3BlcnRpZXM6CiAgICAgIGNvbmZpZy5wcm9wZXJ0aWVzOiB8CiAgICAgICAgY29vcmRpbmF0b3I9dHJ1ZQogICAgICAgIG5vZGUtc2NoZWR1bGVyLmluY2x1ZGUtY29vcmRpbmF0b3I9ZmFsc2UKICAgICAgICBodHRwLXNlcnZlci5odHRwLnBvcnQ9ODA4MAogICAgICAgIGRpc2NvdmVyeS51cmk9aHR0cDovL2xvY2FsaG9zdDo4MDgwCiAgICAgICAgZGlzY292ZXJ5LXNlcnZlci5lbmFibGVkPXRydWUKICAgICAgbG9nLnByb3BlcnRpZXM6IHwKICAgICAgICAjIEVuYWJsZSB2ZXJib3NlIGxvZ2dpbmcgZnJvbSBTdGFyYnVyc3QgRW50ZXJwcmlzZQogICAgICAgICNpby50cmlubz1ERUJVRwogICAgICAgICNjb20uc3RhcmJ1cnN0ZGF0YS5wcmVzdG89REVCVUcKICAgICAgbm9kZS5wcm9wZXJ0aWVzOiB8CiAgICAgICAgbm9kZS5lbnZpcm9ubWVudD1zdGFyYnVyc3RlbnRlcnByaXNlc2FtcGxlCiAgICAgICAgbm9kZS5kYXRhLWRpcj0vZGF0YS9zdGFyYnVyc3QKICAgICAgICBwbHVnaW4uZGlyPS91c3IvbGliL3N0YXJidXJzdC9wbHVnaW4KICAgICAgICBub2RlLnNlcnZlci1sb2ctZmlsZT0vdmFyL2xvZy9zdGFyYnVyc3Qvc2VydmVyLmxvZwogICAgICAgIG5vZGUubGF1bmNoZXItbG9nLWZpbGU9L3Zhci9sb2cvc3RhcmJ1cnN0L2xhdW5jaGVyLmxvZwogIGhlYXBIZWFkcm9vbVBlcmNlbnRhZ2U6IDMwCiAgaGVhcFNpemVQZXJjZW50YWdlOiA5MAogIGluaXRDb250YWluZXJzOiBbXQogIG5vZGVNZW1vcnlIZWFkcm9vbTogMkdpCiAgbm9kZVNlbGVjdG9yOiB7fQogIHBvZEFubm90YXRpb25zOiB7fQogIHJlc291cmNlczoKICAgIGNwdTogMTYKICAgIG1lbW9yeTogNjBHaQogIHNpZGVjYXJzOiBbXQogIHRvbGVyYXRpb25zOiBbXQpleHBvc2U6CiAgY2x1c3RlcklwOgogICAgbmFtZTogc3RhcmJ1cnN0CiAgICBwb3J0czoKICAgICAgaHR0cDoKICAgICAgICBwb3J0OiA4MDgwCiAgaW5ncmVzczoKICAgIGFubm90YXRpb25zOiB7fQogICAgaW5ncmVzc05hbWU6IGNvb3JkaW5hdG9yLWluZ3Jlc3MKICAgIHBhdGg6IC8KICAgIHBhdGhUeXBlOiBJbXBsZW1lbnRhdGlvblNwZWNpZmljCiAgICBzZXJ2aWNlTmFtZTogc3RhcmJ1cnN0CiAgICBzZXJ2aWNlUG9ydDogODA4MAogICAgdGxzOgogICAgICBlbmFibGVkOiB0cnVlCiAgbG9hZEJhbGFuY2VyOgogICAgSVA6ICIiCiAgICBhbm5vdGF0aW9uczoge30KICAgIG5hbWU6IHN0YXJidXJzdAogICAgcG9ydHM6CiAgICAgIGh0dHA6CiAgICAgICAgcG9ydDogODA4MAogICAgc291cmNlUmFuZ2VzOiBbXQogIG5vZGVQb3J0OgogICAgZXh0cmFMYWJlbHM6IHt9CiAgICBuYW1lOiBzdGFyYnVyc3QKICAgIHBvcnRzOgogICAgICBodHRwOgogICAgICAgIG5vZGVQb3J0OiAzMDA4MAogICAgICAgIHBvcnQ6IDgwODAKICB0eXBlOiBjbHVzdGVySXAKZXh0ZXJuYWxTZWNyZXRzOgogIGVuYWJsZWQ6IGZhbHNlCiAgZ29EYWRkeToKICAgIGJhY2tlbmRUeXBlOiBzZWNyZXRzTWFuYWdlcgogIHNlY3JldFByZWZpeDogZXh0ZXJuYWwwCiAgdHlwZTogZ29EYWRkeQpleHRyYUFyZ3VtZW50czogW10KZXh0cmFTZWNyZXQ6IHt9CmltYWdlOgogIHB1bGxQb2xpY3k6IElmTm90UHJlc2VudAogIHJlcG9zaXRvcnk6IHJlZ2lzdHJ5LmNvbm5lY3QucmVkaGF0LmNvbS9zdGFyYnVyc3Qvc3RhcmJ1cnN0LWVudGVycHJpc2UKICB0YWc6IDM3MC1lLjEtdWJpCmluaXRGaWxlOiAiIgppbml0SW1hZ2U6CiAgcHVsbFBvbGljeTogSWZOb3RQcmVzZW50CiAgcmVwb3NpdG9yeTogcmVnaXN0cnkuY29ubmVjdC5yZWRoYXQuY29tL3N0YXJidXJzdC9zdGFyYnVyc3QtZW50ZXJwcmlzZS1pbml0CiAgdGFnOiAzNzAuMS4xLXViaQppbnRlcm5hbDoKICBwb3J0czoKICAgIGh0dHA6CiAgICAgIHBvcnQ6IDgwODAKICAgIGh0dHBzOgogICAgICBwb3J0OiA4NDQzCmludGVybmFsVGxzOiBmYWxzZQpwcm9tZXRoZXVzOgogIGFnZW50OgogICAgY29uZmlnOiAvZXRjL3N0YXJidXJzdC90ZWxlbWV0cnkvcHJvbWV0aGV1cy55YW1sCiAgICBwb3J0OiA4MDgxCiAgICB2ZXJzaW9uOiAwLjE2LjEKICBlbmFibGVkOiB0cnVlCiAgcnVsZXM6CiAgLSBhdHRyTmFtZVNuYWtlQ2FzZTogdHJ1ZQogICAgbmFtZTogJDEKICAgIHBhdHRlcm46IHRyaW5vLmV4ZWN1dGlvbjxuYW1lPVF1ZXJ5TWFuYWdlcj48PihydW5uaW5nX3F1ZXJpZXN8cXVldWVkX3F1ZXJpZXMpCiAgICB0eXBlOiBHQVVHRQogIC0gbmFtZTogZmFpbGVkX3F1ZXJpZXMKICAgIHBhdHRlcm46IHRyaW5vLmV4ZWN1dGlvbjxuYW1lPVF1ZXJ5TWFuYWdlcj48PkZhaWxlZFF1ZXJpZXNcLlRvdGFsQ291bnQKICAgIHR5cGU6IENPVU5URVIKcXVlcnk6CiAgbWF4Q29uY3VycmVudFF1ZXJpZXM6IDMKcmVnaXN0cnlDcmVkZW50aWFsczoKICBlbmFibGVkOiBmYWxzZQogIHJlZ2lzdHJ5OiByZWdpc3RyeS5jb25uZWN0LnJlZGhhdC5jb20Kc2VjdXJpdHlDb250ZXh0OiB7fQpzcGlsbGluZzoKICBlbmFibGVkOiBmYWxzZQogIHZvbHVtZToKICAgIGVtcHR5RGlyOiB7fQpzdGFyYnVyc3QtY2hhcnRzLWNvbW1vbjoKICBnbG9iYWw6IHt9CnVzYWdlTWV0cmljczoKICBlbmFibGVkOiBmYWxzZQogIHVzYWdlQ2xpZW50OgogICAgaW5pdGlhbERlbGF5OiAxbQogICAgaW50ZXJ2YWw6IDFtCnVzZXJEYXRhYmFzZToKICBlbmFibGVkOiBmYWxzZQogIHVzZXJzOgogIC0gcGFzc3dvcmQ6IDQ2OTkxYjMzZjdhNzVmZjc5MjEzYzBkYzBlNjEwNjEwCiAgICB1c2VybmFtZTogYWRtaW4Kd29ya2VyOgogIGFkZGl0aW9uYWxQcm9wZXJ0aWVzOiAiIgogIGFmZmluaXR5OiB7fQogIGF1dG9zY2FsaW5nOgogICAgZW5hYmxlZDogZmFsc2UKICAgIG1heFJlcGxpY2FzOiAxMDAKICAgIG1pblJlcGxpY2FzOiAxCiAgICB0YXJnZXRDUFVVdGlsaXphdGlvblBlcmNlbnRhZ2U6IDgwCiAgZGVwbG95bWVudEFubm90YXRpb25zOiB7fQogIGRlcGxveW1lbnRUZXJtaW5hdGlvbkdyYWNlUGVyaW9kU2Vjb25kczogMzAwCiAgZW52RnJvbTogW10KICBldGNGaWxlczoKICAgIGp2bS5jb25maWc6IHwKICAgICAgLXNlcnZlcgogICAgICAtWFg6LVVzZUJpYXNlZExvY2tpbmcKICAgICAgLVhYOitVc2VHMUdDCiAgICAgIC1YWDpHMUhlYXBSZWdpb25TaXplPTMyTQogICAgICAtWFg6K0V4cGxpY2l0R0NJbnZva2VzQ29uY3VycmVudAogICAgICAtWFg6K0V4aXRPbk91dE9mTWVtb3J5RXJyb3IKICAgICAgLVhYOitIZWFwRHVtcE9uT3V0T2ZNZW1vcnlFcnJvcgogICAgICAtWFg6LU9taXRTdGFja1RyYWNlSW5GYXN0VGhyb3cKICAgICAgLVhYOlJlc2VydmVkQ29kZUNhY2hlU2l6ZT01MTJNCiAgICAgIC1YWDpQZXJNZXRob2RSZWNvbXBpbGF0aW9uQ3V0b2ZmPTEwMDAwCiAgICAgIC1YWDpQZXJCeXRlY29kZVJlY29tcGlsYXRpb25DdXRvZmY9MTAwMDAKICAgICAgLURqZGsubmlvLm1heENhY2hlZEJ1ZmZlclNpemU9MjAwMDAwMAogICAgICAtRGpkay5hdHRhY2guYWxsb3dBdHRhY2hTZWxmPXRydWUKICAgIG90aGVyOiB7fQogICAgcHJvcGVydGllczoKICAgICAgY29uZmlnLnByb3BlcnRpZXM6IHwKICAgICAgICBjb29yZGluYXRvcj1mYWxzZQogICAgICAgIGh0dHAtc2VydmVyLmh0dHAucG9ydD04MDgwCiAgICAgICAgZGlzY292ZXJ5LnVyaT1odHRwOi8vY29vcmRpbmF0b3I6ODA4MAogICAgICBsb2cucHJvcGVydGllczogfAogICAgICAgICMgRW5hYmxlIHZlcmJvc2UgbG9nZ2luZyBmcm9tIFN0YXJidXJzdCBFbnRlcnByaXNlCiAgICAgICAgI2lvLnRyaW5vPURFQlVHCiAgICAgICAgI2NvbS5zdGFyYnVyc3RkYXRhLnByZXN0bz1ERUJVRwogICAgICBub2RlLnByb3BlcnRpZXM6IHwKICAgICAgICBub2RlLmVudmlyb25tZW50PXN0YXJidXJzdGVudGVycHJpc2VzYW1wbGUKICAgICAgICBub2RlLmRhdGEtZGlyPS9kYXRhL3N0YXJidXJzdAogICAgICAgIHBsdWdpbi5kaXI9L3Vzci9saWIvc3RhcmJ1cnN0L3BsdWdpbgogICAgICAgIG5vZGUuc2VydmVyLWxvZy1maWxlPS92YXIvbG9nL3N0YXJidXJzdC9zZXJ2ZXIubG9nCiAgICAgICAgbm9kZS5sYXVuY2hlci1sb2ctZmlsZT0vdmFyL2xvZy9zdGFyYnVyc3QvbGF1bmNoZXIubG9nCiAgaGVhcEhlYWRyb29tUGVyY2VudGFnZTogMzAKICBoZWFwU2l6ZVBlcmNlbnRhZ2U6IDkwCiAgaW5pdENvbnRhaW5lcnM6IFtdCiAgbm9kZU1lbW9yeUhlYWRyb29tOiAyR2kKICBub2RlU2VsZWN0b3I6IHt9CiAgcG9kQW5ub3RhdGlvbnM6IHt9CiAgcmVwbGljYXM6IDIKICByZXNvdXJjZXM6CiAgICBjcHU6IDE2CiAgICBtZW1vcnk6IDEwMEdpCiAgc2lkZWNhcnM6IFtdCiAgc3RhcmJ1cnN0V29ya2VyU2h1dGRvd25HcmFjZVBlcmlvZFNlY29uZHM6IDEyMAogIHRvbGVyYXRpb25zOiBbXQ==\n---\n#
      Source: starburst-enterprise/templates/coordinator/prometheus-configmap.yaml\n#
      ------------------------------------------------------------------------------\n#
      Coordinator Prometheus\n# ------------------------------------------------------------------------------\napiVersion:
      v1\nkind: ConfigMap\nmetadata:\n  name: starburst-coordinator-p8s\n  labels:\n
      \   name: starburst-coordinator-p8s\ndata:\n  prometheus.yaml: |\n    rules:\n
      \     - attrNameSnakeCase: true\n        name: $1\n        pattern: trino.execution<name=QueryManager><>(running_queries|queued_queries)\n
      \       type: GAUGE\n      - name: failed_queries\n        pattern: trino.execution<name=QueryManager><>FailedQueries\\.TotalCount\n
      \       type: COUNTER\n---\n# Source: starburst-enterprise/templates/workers/prometheus-configmap.yaml\n#
      ------------------------------------------------------------------------------\n#
      Workers Prometheus\n# ------------------------------------------------------------------------------\n\napiVersion:
      v1\nkind: ConfigMap\nmetadata:\n  name: starburst-worker-p8s\n  labels:\n    name:
      starburst-worker-p8s\ndata:\n  prometheus.yaml: |\n    rules:\n      - attrNameSnakeCase:
      true\n        name: $1\n        pattern: trino.execution<name=QueryManager><>(running_queries|queued_queries)\n
      \       type: GAUGE\n      - name: failed_queries\n        pattern: trino.execution<name=QueryManager><>FailedQueries\\.TotalCount\n
      \       type: COUNTER\n---\n# Source: starburst-enterprise/templates/coordinator/prometheus-service.yaml\napiVersion:
      v1\nkind: Service\nmetadata:\n  name: prometheus-coordinator-starburstenterprise-sample\n
      \ labels:\n    app: starburst-enterprise\n    helm-release: starburstenterprise-sample\n
      \   helm-chart: starburst-enterprise-370.1.1\n    managed-by: Helm\n    role:
      prometheus-coordinator\nspec:\n  selector:\n    app: starburst-enterprise\n
      \   helm-release: starburstenterprise-sample\n    helm-chart: starburst-enterprise-370.1.1\n
      \   managed-by: Helm\n    role: coordinator\n  ports:\n    - name: metrics\n
      \     protocol: TCP\n      port: 8081\n  type: ClusterIP\n---\n# Source: starburst-enterprise/templates/coordinator/service.yaml\n#
      ------------------------------------------------------------------------------\n#
      Coordinator Headless Service\n#\n# Used only for internal communication. Required
      for SAN entries in TLS certs.\n# ------------------------------------------------------------------------------\n\napiVersion:
      v1\nkind: Service\nmetadata:\n  name: coordinator\n  labels:\n    app: starburst-enterprise\n
      \   helm-release: starburstenterprise-sample\n    helm-chart: starburst-enterprise-370.1.1\n
      \   managed-by: Helm\n    role: coordinator\n    headless: \"true\"\nspec:\n
      \ clusterIP: None\n  type: ClusterIP\n  publishNotReadyAddresses: true\n  ports:\n
      \   - name: http\n      port: 8080\n      protocol: TCP\n    - name: https\n
      \     port: 8443\n      protocol: TCP\n  selector:\n    app: starburst-enterprise\n
      \   helm-release: starburstenterprise-sample\n    helm-chart: starburst-enterprise-370.1.1\n
      \   managed-by: Helm\n    role: coordinator\n---\n# Source: starburst-enterprise/templates/expose/cluster-ip/service.yaml\napiVersion:
      v1\nkind: Service\nmetadata:\n  name: starburst\n  labels:\n    app: starburst-enterprise\n
      \   helm-release: starburstenterprise-sample\n    helm-chart: starburst-enterprise-370.1.1\n
      \   managed-by: Helm\n    role: coordinator\nspec:\n  type: ClusterIP\n  ports:\n
      \   - name: http\n      port: 8080\n      targetPort: 8080\n      protocol:
      TCP\n  selector:\n    app: starburst-enterprise\n    helm-release: starburstenterprise-sample\n
      \   helm-chart: starburst-enterprise-370.1.1\n    managed-by: Helm\n    role:
      coordinator\n---\n# Source: starburst-enterprise/templates/workers/prometheus-service.yaml\napiVersion:
      v1\nkind: Service\nmetadata:\n  name: prometheus-worker-starburstenterprise-sample\n
      \ labels:\n    app: starburst-enterprise\n    helm-release: starburstenterprise-sample\n
      \   helm-chart: starburst-enterprise-370.1.1\n    managed-by: Helm\n    role:
      prometheus-worker\nspec:\n  selector:\n    app: starburst-enterprise\n    helm-release:
      starburstenterprise-sample\n    helm-chart: starburst-enterprise-370.1.1\n    managed-by:
      Helm\n    role: worker\n  ports:\n    - name: metrics\n      protocol: TCP\n
      \     port: 8081\n  type: ClusterIP\n---\n# Source: starburst-enterprise/templates/workers/service.yaml\n#
      ------------------------------------------------------------------------------\n#
      Worker Headless Service\n#\n# Used only for internal communication. Required
      for SAN wildcard entries in TLS certs.\n# ------------------------------------------------------------------------------\n\napiVersion:
      v1\nkind: Service\nmetadata:\n  name: worker\n  labels:\n    app: starburst-enterprise\n
      \   helm-release: starburstenterprise-sample\n    helm-chart: starburst-enterprise-370.1.1\n
      \   managed-by: Helm\n    role: worker\n    headless: \"true\"\nspec:\n  clusterIP:
      None\n  type: ClusterIP\n  publishNotReadyAddresses: true\n  ports:\n    - name:
      http\n      port: 8080\n      protocol: TCP\n    - name: https\n      port:
      8443\n      protocol: TCP\n  selector:\n    app: starburst-enterprise\n    helm-release:
      starburstenterprise-sample\n    helm-chart: starburst-enterprise-370.1.1\n    managed-by:
      Helm\n    role: worker\n---\n# Source: starburst-enterprise/templates/coordinator/deployment.yaml\napiVersion:
      apps/v1\nkind: Deployment\nmetadata:\n  name: coordinator\n  labels:\n    role:
      coordinator\n    app: starburst-enterprise\n    helm-release: starburstenterprise-sample\n
      \   helm-chart: starburst-enterprise-370.1.1\n    managed-by: Helm\nspec:\n
      \ replicas: 1\n  selector:\n    matchLabels:\n      role: coordinator\n      app:
      starburst-enterprise\n      helm-release: starburstenterprise-sample\n  strategy:\n
      \   type: Recreate\n  template:\n    metadata:\n      labels:\n        role:
      coordinator\n        app: starburst-enterprise\n        helm-release: starburstenterprise-sample\n
      \       helm-chart: starburst-enterprise-370.1.1\n        managed-by: Helm\n
      \     annotations:\n        \n        checksum/coordinator-values: c114de2c99cb442e92ed2453226ea9b8c42efeff99ca76f64a83210ce102c67c\n
      \       checksum/pullsecret: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b\n
      \   spec:\n      # This has to be in sync as we can't kill coordinator earlier
      that workers.\n      terminationGracePeriodSeconds: 300\n      \n      initContainers:\n
      \       - name: starburst-enterprise-init\n          image: \"registry.connect.redhat.com/starburst/starburst-enterprise-init:370.1.1-ubi\"\n
      \         imagePullPolicy: IfNotPresent\n          resources:\n            requests:\n
      \             memory: 60Gi\n              cpu: 16\n            limits:\n              memory:
      60Gi\n              cpu: 16\n          env:\n            - name: POD_IP\n              valueFrom:\n
      \               fieldRef:\n                  fieldPath: status.podIP\n            -
      name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath:
      metadata.namespace\n          volumeMounts:\n            - name: starburst-config\n
      \             mountPath: /work-dir\n            - name: starburst-config-updated\n
      \             mountPath: /etc/starburst\n          command:\n            - starburst-conf-cli\n
      \           - generate\n            - --values-yaml\n            - /work-dir/values.yaml\n
      \           - --config-type\n            - COORDINATOR\n            - --starburst-config-dir\n
      \           - /etc/starburst\n            - --ip\n            - $(POD_IP)\n
      \           - --k8s-namespace\n            - $(POD_NAMESPACE)\n      containers:\n
      \       - name: coordinator\n          image: \"registry.connect.redhat.com/starburst/starburst-enterprise:370-e.1-ubi\"\n
      \         imagePullPolicy: IfNotPresent\n          startupProbe:\n            httpGet:\n
      \             scheme: HTTP\n              path: /v1/readiness\n              port:
      8080\n            failureThreshold: 40\n            periodSeconds: 10\n          readinessProbe:\n
      \           httpGet:\n              scheme: HTTP\n              path: /v1/readiness\n
      \             port: 8080\n            timeoutSeconds: 5\n            periodSeconds:
      10\n            failureThreshold: 3\n          livenessProbe:\n            httpGet:\n
      \             scheme: HTTP\n              path: /v1/info\n              port:
      8080\n            timeoutSeconds: 5\n            periodSeconds: 60\n            failureThreshold:
      3\n          envFrom:\n            \n            \n          env:\n            -
      name: POD_ID\n              valueFrom:\n                fieldRef:\n                  fieldPath:
      metadata.uid\n            - name: POD_IP\n              valueFrom:\n                fieldRef:\n
      \                 fieldPath: status.podIP\n            - name: POD_NAMESPACE\n
      \             valueFrom:\n                fieldRef:\n                  fieldPath:
      metadata.namespace\n          ports:\n            - containerPort: 8080\n            -
      containerPort: 8443\n          volumeMounts:\n            - name: starburst-config-updated\n
      \             mountPath: /etc/starburst\n            \n            \n            -
      name: prometheus-volume\n              mountPath: /etc/starburst/telemetry\n
      \           \n          resources:\n            requests:\n              memory:
      60Gi\n              cpu: 16\n            limits:\n              memory: 60Gi\n
      \             cpu: 16\n          terminationMessagePolicy: FallbackToLogsOnError\n
      \     volumes:\n        - name: starburst-config\n          projected:\n            sources:\n
      \             - secret:\n                  name: values-yaml-secret\n        -
      name: starburst-config-updated\n          emptyDir: {}\n        \n        \n
      \       - name: prometheus-volume\n          configMap:\n            name: starburst-coordinator-p8s\n---\n#
      Source: starburst-enterprise/templates/workers/deployment.yaml\napiVersion:
      apps/v1\nkind: Deployment\nmetadata:\n  name: worker\n  labels:\n    role: worker\n
      \   app: starburst-enterprise\n    helm-release: starburstenterprise-sample\n
      \   helm-chart: starburst-enterprise-370.1.1\n    managed-by: Helm\nspec:\n
      \ replicas: 2\n  selector:\n    matchLabels:\n      role: worker\n      app:
      starburst-enterprise\n      helm-release: starburstenterprise-sample\n  strategy:\n
      \   type: Recreate\n  template:\n    metadata:\n      labels:\n        role:
      worker\n        app: starburst-enterprise\n        helm-release: starburstenterprise-sample\n
      \       helm-chart: starburst-enterprise-370.1.1\n        managed-by: Helm\n
      \     annotations:\n        \n        checksum/worker-values: 6c9c7ef2fbb1afc4854af9428fad06b372f251c97baf90aafd0b7b244ce16ecb\n
      \       checksum/pullsecret: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b\n
      \   spec:\n      terminationGracePeriodSeconds: 300\n      \n      initContainers:\n
      \       - name: starburst-enterprise-init\n          image: \"registry.connect.redhat.com/starburst/starburst-enterprise-init:370.1.1-ubi\"\n
      \         imagePullPolicy: IfNotPresent\n          resources:\n            requests:\n
      \             memory: 100Gi\n              cpu: 16\n            limits:\n              memory:
      100Gi\n              cpu: 16\n          env:\n            - name: POD_IP\n              valueFrom:\n
      \               fieldRef:\n                  fieldPath: status.podIP\n            -
      name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath:
      metadata.namespace\n          volumeMounts:\n            - name: starburst-config\n
      \             mountPath: /work-dir\n            - name: starburst-config-updated\n
      \             mountPath: /etc/starburst\n          command:\n            - starburst-conf-cli\n
      \           - generate\n            - --values-yaml\n            - /work-dir/values.yaml\n
      \           - --config-type\n            - WORKER\n            - --starburst-config-dir\n
      \           - /etc/starburst\n            - --ip\n            - $(POD_IP)\n
      \           - --k8s-namespace\n            - $(POD_NAMESPACE)\n      containers:\n
      \       - name: worker\n          image: \"registry.connect.redhat.com/starburst/starburst-enterprise:370-e.1-ubi\"\n
      \         imagePullPolicy: IfNotPresent\n          startupProbe:\n            httpGet:\n
      \             scheme: HTTP\n              path: /v1/readiness\n              port:
      8080\n            failureThreshold: 40\n            periodSeconds: 10\n          readinessProbe:\n
      \           httpGet:\n              scheme: HTTP\n              path: /v1/readiness\n
      \             port: 8080\n            timeoutSeconds: 5\n            periodSeconds:
      10\n            failureThreshold: 3\n          livenessProbe:\n            httpGet:\n
      \             scheme: HTTP\n              path: /v1/info\n              port:
      8080\n            timeoutSeconds: 5\n            periodSeconds: 60\n            failureThreshold:
      3\n          envFrom:\n            \n            \n          env:\n            -
      name: POD_ID\n              valueFrom:\n                fieldRef:\n                  fieldPath:
      metadata.uid\n            - name: POD_IP\n              valueFrom:\n                fieldRef:\n
      \                 fieldPath: status.podIP\n            - name: POD_NAMESPACE\n
      \             valueFrom:\n                fieldRef:\n                  fieldPath:
      metadata.namespace\n          ports:\n            - containerPort: 8080\n            -
      containerPort: 8443\n          volumeMounts:\n            - name: starburst-config-updated\n
      \             mountPath: /etc/starburst\n            \n            \n            -
      name: prometheus-volume\n              mountPath: /etc/starburst/telemetry\n
      \           \n          resources:\n            requests:\n              memory:
      100Gi\n              cpu: 16\n            limits:\n              memory: 100Gi\n
      \             cpu: 16\n          terminationMessagePolicy: FallbackToLogsOnError\n
      \     volumes:\n        - name: starburst-config\n          projected:\n            sources:\n
      \           - secret:\n                name: values-yaml-secret\n        - name:
      starburst-config-updated\n          emptyDir: {}\n        \n        \n        -
      name: prometheus-volume\n          configMap:\n            name: starburst-worker-p8s\n"
    name: starburstenterprise-sample
