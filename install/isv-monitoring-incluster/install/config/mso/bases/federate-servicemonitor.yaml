apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: <monitored_namespace>-federation
  namespace: monitoring-stack-operator
  labels:
    app: <monitored_namespace>
spec:
  jobLabel: openshift-monitoring-federation
  namespaceSelector:
    matchNames:
      - openshift-monitoring
  selector:
    matchLabels:
      app.kubernetes.io/instance: k8s
  endpoints:
    - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      interval: 30s
      params:
        'match[]':
          - node_namespace_pod_container:container_memory_working_set_bytes{namespace="<monitored_namespace>"}
          - node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{namespace="<monitored_namespace>"}
          - namespace_workload_pod:kube_pod_owner:relabel{namespace="<monitored_namespace>"}
          - kube_pod_container_info{namespace="<monitored_namespace>"}
          - kube_pod_status_ready{namespace="<monitored_namespace>"}
          - kube_pod_container_status_last_terminated_reason{namespace="<monitored_namespace>"}
          - kube_pod_container_status_waiting{namespace="<monitored_namespace>"}
          # num pods
          - node_namespace_pod:kube_pod_info:{namespace="<monitored_namespace>"}
          # num services
          - kube_service_info{namespace="<monitored_namespace>"}
          # not ready pods (metric exists ^)

          # ready pods (metric exists ^)

          # available memory/limit
          - cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{namespace="<monitored_namespace>"}

          # cpu per container
          - container_cpu_usage_seconds_total{namespace="<monitored_namespace>"}
          - container_cpu_cfs_throttled_seconds_total{namespace="<monitored_namespace>"}

          # fs
          - container_fs_usage_bytes{namespace="<monitored_namespace>"}
          - container_fs_writes_bytes_total{namespace="<monitored_namespace>"}
          - container_fs_reads_bytes_total{namespace="<monitored_namespace>"}

          # network
          - container_network_receive_bytes_total{namespace="<monitored_namespace>"}
          - container_network_transmit_bytes_total{namespace="<monitored_namespace>"}
          - container_network_receive_packets_dropped_total{namespace="<monitored_namespace>"}
          - container_network_receive_packets_total{namespace="<monitored_namespace>"}

          
      path: /federate
      port: web
      scheme: https
      tlsConfig:
        caFile: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
        serverName: prometheus-k8s.openshift-monitoring.svc.cluster.local
      honorLabels: true